--- u-boot-2011.06/drivers/video/Makefile	2011-06-28 04:22:42.000000000 +0800
+++ u-boot-2011.06-tekkaman/drivers/video/Makefile	2012-12-17 15:15:03.000000000 +0800
@@ -41,6 +41,7 @@
 COBJS-$(CONFIG_VIDEO_SM501) += sm501.o
 COBJS-$(CONFIG_VIDEO_SMI_LYNXEM) += smiLynxEM.o videomodes.o
 COBJS-$(CONFIG_VIDEO_VCXK) += bus_vcxk.o
+COBJS-$(CONFIG_VIDEO_S3C64X0) += s3c64x0_fb.o videomodes.o
 
 COBJS	:= $(COBJS-y)
 SRCS	:= $(COBJS:.o=.c)
--- u-boot-2011.06/drivers/video/cfb_console.c	2011-06-28 04:22:42.000000000 +0800
+++ u-boot-2011.06-tekkaman/drivers/video/cfb_console.c	2012-12-17 15:15:03.000000000 +0800
@@ -334,6 +334,12 @@
 #define PRINTD(x)
 #endif
 
+#if defined(LCD_VIDEO_BACKGROUND)
+#include <nand.h>
+#include <mmc.h>
+static void *video_fb_gb_loadaddress;		/* frame buffer address for background*/
+static size_t video_fb_gb_size;
+#endif
 
 #ifdef CONFIG_CONSOLE_EXTRA_INFO
 extern void video_get_info_str (    /* setup a board string: type, speed, etc. */
@@ -1118,10 +1124,23 @@
 		height = VIDEO_VISIBLE_ROWS - y;
 
 	bmap = (uchar *) bmp + le32_to_cpu (bmp->header.data_offset);
+
+#if defined(LCD_VIDEO_BACKGROUND)
+	if (bmp_image == (ulong )LCD_VIDEO_BACKGROUND_LOADADDR)	{
+	fb = (uchar *) (LCD_VIDEO_BACKGROUND_ADDR +
+			((y + height - 1) * VIDEO_COLS * VIDEO_PIXEL_SIZE) +
+			x * VIDEO_PIXEL_SIZE);
+	} else {
 	fb = (uchar *) (video_fb_address +
 			((y + height - 1) * VIDEO_COLS * VIDEO_PIXEL_SIZE) +
 			x * VIDEO_PIXEL_SIZE);
+	}
 
+#else
+	fb = (uchar *) (video_fb_address +
+			((y + height - 1) * VIDEO_COLS * VIDEO_PIXEL_SIZE) +
+			x * VIDEO_PIXEL_SIZE);
+#endif
 #ifdef CONFIG_VIDEO_BMP_RLE8
 	if (compression == BMP_BI_RLE8) {
 		return display_rle8_bitmap(bmp,
@@ -1550,6 +1569,7 @@
 static int video_init (void)
 {
 	unsigned char color8;
+	int ret;
 
 	if ((pGD = video_hw_init ()) == NULL)
 		return -1;
@@ -1616,6 +1636,41 @@
 	video_console_address = video_fb_address;
 #endif
 
+#if defined(LCD_VIDEO_BACKGROUND)
+	PRINTD ("Video: Drawing the background ...\n");
+	#if defined(LCD_VIDEO_BACKGROUND_IN_NAND)
+	video_fb_gb_loadaddress =  (void *)LCD_VIDEO_BACKGROUND_LOADADDR;
+	video_fb_gb_size = LCD_VIDEO_BACKGROUND_LOADSIZE;
+
+	ret = nand_read_skip_bad(&nand_info[nand_curr_device], LCD_VIDEO_BACKGROUND_FLASH_ADDR,
+				&video_fb_gb_size, (u_char *)video_fb_gb_loadaddress);
+
+	#elif defined(LCD_VIDEO_BACKGROUND_IN_MMC)
+	struct mmc *mmc = find_mmc_device(CONFIG_SYS_MMC_ENV_DEV);
+
+	video_fb_gb_loadaddress =  (void *)LCD_VIDEO_BACKGROUND_LOADADDR;
+	video_fb_gb_size = MMC_LCD_VIDEO_BACKGROUND_BLKCNT;
+
+	if (mmc != NULL) {
+		ret = mmc->block_dev.block_read(CONFIG_SYS_MMC_ENV_DEV, MMC_LCD_VIDEO_BACKGROUND_POS,
+						video_fb_gb_size, (uchar *)video_fb_gb_loadaddress);
+	} else {
+		printf("Video: No MMC card for background image!\n");
+	}
+	#else
+	#error Sorry,we only Support background image in nand flash and SD, right now!
+	#endif
+	ret = (ret == video_fb_gb_size) ? 0 : -1;
+	if (ret == 0)	{
+		ret = video_display_bitmap((ulong)video_fb_gb_loadaddress, 0, 0);
+	} else {
+		PRINTD ("Video: cannot read background image !\n");
+	}
+
+
+#endif
+
+
 	/* Initialize the console */
 	console_col = 0;
 	console_row = 0;
